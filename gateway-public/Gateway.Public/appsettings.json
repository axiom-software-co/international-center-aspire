{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning",
      "Yarp": "Information"
    }
  },
  "AllowedHosts": "*",
  "PublicAllowedOrigins": [
    "https://internationalcenter.org",
    "https://www.internationalcenter.org"
  ],
  "ReverseProxy": {
    "Routes": {
      "services-public-route": {
        "ClusterId": "services-public-cluster",
        "Match": {
          "Path": "/api/services/{**catch-all}"
        },
        "Transforms": [
          {
            "PathPattern": "/api/services/{**catch-all}"
          },
          {
            "RequestHeader": "X-Forwarded-For",
            "Set": "{RemoteIpAddress}"
          },
          {
            "RequestHeader": "X-Gateway-Source",
            "Set": "PublicGateway"
          }
        ]
      },
      "services-categories-route": {
        "ClusterId": "services-public-cluster",
        "Match": {
          "Path": "/api/categories/{**catch-all}"
        },
        "Transforms": [
          {
            "PathPattern": "/api/categories/{**catch-all}"
          },
          {
            "RequestHeader": "X-Forwarded-For",
            "Set": "{RemoteIpAddress}"
          },
          {
            "RequestHeader": "X-Gateway-Source",
            "Set": "PublicGateway"
          }
        ]
      },
      "version-route": {
        "ClusterId": "services-public-cluster",
        "Match": {
          "Path": "/api/version"
        },
        "Transforms": [
          {
            "PathPattern": "/api/version"
          },
          {
            "RequestHeader": "X-Gateway-Source",
            "Set": "PublicGateway"
          }
        ]
      }
    },
    "Clusters": {
      "services-public-cluster": {
        "Destinations": {
          "services-public-api": {
            "Address": "http://services-public-api"
          }
        },
        "HttpRequest": {
          "Timeout": "00:01:00"
        },
        "HealthCheck": {
          "Active": {
            "Enabled": true,
            "Interval": "00:00:30",
            "Timeout": "00:00:05",
            "Policy": "ConsecutiveFailures",
            "Path": "/health"
          }
        }
      }
    }
  },
  "Metrics": {
    "Enabled": true,
    "MetricsPath": "/metrics",
    "ServiceName": "Gateway-Public",
    "ServiceVersion": "1.0.0",
    "Environment": "Production",
    "ExportInterval": "00:00:15",
    "ExportTimeout": "00:00:30",
    "EnableGzip": true,
    "MaxConcurrentExports": 10,
    "Security": {
      "EnableSecurity": true,
      "AllowedIps": [
        "127.0.0.1",
        "::1",
        "10.0.0.0/8",
        "172.16.0.0/12",
        "192.168.0.0/16"
      ],
      "RequireAuthentication": false,
      "AuthenticationScheme": null,
      "EnableRateLimiting": true,
      "MaxRequestsPerMinute": 100,
      "LogSecurityEvents": true,
      "EnableSecurityHeaders": true,
      "IpBlockDuration": "00:15:00"
    },
    "Prometheus": {
      "ExporterType": "AspNetCore",
      "EnableOpenMetrics": true,
      "AdditionalLabels": null,
      "StaticLabels": {
        "service": "gateway-public",
        "gateway_type": "public"
      },
      "IncludeTargetInfo": true,
      "ExternalUrl": null,
      "ScrapeConfigRefreshInterval": "00:05:00"
    },
    "ServiceDiscovery": {
      "EnableAutoDiscovery": true,
      "DiscoveryMethod": "Aspire",
      "DiscoveryInterval": "00:01:00",
      "StaticEndpoints": null,
      "DefaultLabels": {
        "cluster": "production",
        "region": "us-east-1"
      },
      "GeneratePrometheusConfig": false,
      "PrometheusConfigPath": "/config/prometheus.yml"
    },
    "CustomMetrics": {
      "EnableCustomMetrics": true,
      "MeterName": "Gateway.Public",
      "MeterVersion": "1.0.0",
      "MaxCustomMetrics": 1000,
      "ValidateMetricNames": true,
      "MetricPrefixes": ["gateway_public_"],
      "MetricRetention": "01:00:00"
    },
    "Performance": {
      "EnablePerformanceMetrics": true,
      "MetricsBufferSize": 10000,
      "MetricsFlushInterval": "00:00:05",
      "EnableCompression": true,
      "MaxResponseSize": 52428800,
      "EnableCaching": true,
      "CacheDuration": "00:00:10"
    }
  }
}