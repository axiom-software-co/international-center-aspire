---
import Layout from '../../layouts/Layout.astro';
import DynamicServicePage from '../../components/blocks/DynamicServicePage.vue';
import { servicesClient } from '../../lib/clients';
import { config } from '../../environments';

// Static path generation for all service pages
export async function getStaticPaths() {
  try {
    // Using the REST services client through Public Gateway
    
    // Fetch all services during build time
    const servicesResponse = await servicesClient.getServices({ 
      pageSize: 100, // Get all services
      status: 'published' 
    });
    
    // Extract service slugs for static path generation
    const paths = servicesResponse.services.map((service) => ({
      params: { slug: service.slug },
      props: { 
        serviceTitle: service.title,
        serviceDescription: service.description 
      }
    }));
    
    console.log(`🏗️ [Build] Generated ${paths.length} service pages`);
    
    return paths;
  } catch (error) {
    console.error('❌ [Build] Failed to fetch services for static paths:', error);
    // Return empty array to prevent build failure
    return [];
  }
}

// Get the current page data
const { slug } = Astro.params;
const { serviceTitle, serviceDescription } = Astro.props;

if (!slug) {
  return Astro.redirect('/services');
}

// Generate SEO-friendly metadata
const formatServiceTitle = (slug: string): string => {
  return slug
    .split('-')
    .map(word => word.charAt(0).toUpperCase() + word.slice(1))
    .join(' ');
};

const finalServiceTitle = serviceTitle || formatServiceTitle(slug);
const pageTitle = `${finalServiceTitle} - International Center | Regenerative Medicine`;
const pageDescription = serviceDescription || `Learn about our ${finalServiceTitle.toLowerCase()} service. Advanced regenerative medicine treatments delivered with professional care and evidence-based protocols.`;
---

<Layout
  title={pageTitle}
  description={pageDescription}
>
  <main>
    <!-- Dynamic Service Page - Critical content for service pages, load immediately -->
    <DynamicServicePage client:load />
  </main>
</Layout>
