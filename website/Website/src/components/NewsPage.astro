---
import Layout from '../layouts/Layout.astro';
import { Breadcrumb } from '../components/Breadcrumb';
import { NewsAuthorInfo } from '../components/NewsAuthorInfo';
import { NewsRelatedTopics } from '../components/NewsRelatedTopics';
import { NewsContent } from '../components/NewsContent';
import { newsClient } from '../lib/clients';

export interface Props {
  slug: string;
}

const { slug } = Astro.props;

// Fetch article from unified API client (API-only, no static fallback)
let articleData = null;
let errorMessage = null;

try {
  articleData = await newsClient.getNewsArticleBySlug(slug);
  if (!articleData) {
    throw new Error(`News article not found: ${slug}`);
  }
} catch (error) {
  console.error('‚ùå Failed to load news article from API:', error.message);
  errorMessage = error.message;
  throw new Error(`News article not available: ${slug}. ${error.message}`);
}

// Construct breadcrumb data for news articles
const breadcrumbData = {
  title: articleData.title,
  serviceName: articleData.title,
  deliveryModes: [], // News articles don't have delivery modes
};
---

<style>
  .news-page-container {
    overflow: visible !important;
  }
</style>

<Layout
  title={`${articleData.title} - International Center`}
  description={articleData.seo.metaDescription}
>
  <main>
    <section class="pb-20">
      <Breadcrumb
        serviceName={articleData.title}
        title={articleData.title}
        deliveryModes={[]}
        dynamicBackgroundTargetId="news-page-aside"
        articleCategory={articleData.category}
        client:load
      />

      <div class="container news-page-container">
        <div class="mt-8 grid gap-12 md:grid-cols-12 md:gap-8">
          <div class="order-2 md:order-none md:col-span-7 md:col-start-1 lg:col-span-8">
            <!-- Article Details - Mobile Only (above content) -->
            <div class="mb-8 block md:hidden">
              <NewsAuthorInfo
                author={articleData.author}
                publishedDate={articleData.publishedDate}
                readingTime={articleData.readingTime}
                client:load
              />
            </div>

            <article class="prose dark:prose-invert mx-auto">
              <div>
                <img
                  src={articleData.heroImage.src}
                  alt={articleData.heroImage.alt}
                  class="mb-8 mt-0 aspect-video w-full rounded object-cover"
                />
              </div>

              <NewsContent articleData={articleData} client:load />
            </article>
          </div>

          <div class="order-1 md:order-none md:col-span-5 lg:col-span-4">
            <div class="md:sticky md:top-20 md:h-[calc(100vh-5rem)] md:overflow-y-auto">
              <aside id="news-page-aside">
                <NewsAuthorInfo
                  author={articleData.author}
                  publishedDate={articleData.publishedDate}
                  readingTime={articleData.readingTime}
                  className="hidden md:block"
                  client:load
                />
                <NewsRelatedTopics
                  className="mt-8 hidden md:block"
                  topics={articleData.relatedTopics}
                  client:load
                />
              </aside>
            </div>
          </div>
        </div>

        <!-- Related Topics - Mobile Only (at end of page) -->
        <div class="mt-12 block md:hidden">
          <NewsRelatedTopics topics={articleData.relatedTopics} client:load />
        </div>
      </div>
    </section>
  </main>
</Layout>
