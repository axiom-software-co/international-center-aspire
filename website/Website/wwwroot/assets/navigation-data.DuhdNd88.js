import{servicesClient as f,researchClient as u,newsClient as m}from"./index.BGfG_Yek.js";import"./environments.BVEfl2St.js";function v(a,l){if(!a||a.length===0)return[];const t=new Map,o={};l.forEach(r=>{o[r.id]=r.name,t.set(r.name,[])});const g={"Primary Care":"Comprehensive primary care and preventive health services","Primary Care Services":"Comprehensive primary care and preventive health services","Regenerative Medicine":"Advanced cellular and biological treatments for healing and recovery","Regenerative Therapies":"Advanced cellular and biological treatments for healing and recovery","Pain Management":"Comprehensive solutions for chronic and acute pain relief","Wellness & Prevention":"Preventive care and overall health optimization services",Diagnostics:"Advanced diagnostic testing and health assessments","Specialized Care":"Targeted treatments for specific health conditions","Other Services":"Additional healthcare services and treatments"};t.set("Other Services",[]),a.forEach(r=>{let e="Other Services";r.category_id&&o[r.category_id]?e=o[r.category_id]:r.category?.name&&(e=r.category.name),t.has(e)||t.set(e,[]),t.get(e).push({title:r.title||"Unknown Service",url:`/services/${r.slug||"unknown"}`,description:r.description||""})}),t.forEach(r=>{r.sort((e,i)=>{const s=a.find(d=>d.title===e.title),c=a.find(d=>d.title===i.title);return s?.featured&&!c?.featured?-1:!s?.featured&&c?.featured?1:e.title.localeCompare(i.title)})});const n=["Primary Care","Primary Care Services","Regenerative Medicine","Regenerative Therapies","Pain Management","Diagnostics","Wellness & Prevention","Specialized Care","Other Services"];return Array.from(t.entries()).filter(([r,e])=>e.length>0).map(([r,e])=>({title:r,description:g[r]||"",items:e})).sort((r,e)=>{const i=n.indexOf(r.title),s=n.indexOf(e.title);return i!==-1&&s!==-1?i-s:i!==-1?-1:s!==-1?1:r.title.localeCompare(e.title)})}function y(a,l){if(!a||a.length===0)return[];const t=new Map,o={};l.forEach(n=>{o[n.id]=n.name,t.set(n.name,[])}),t.set("Other Services",[]),a.forEach(n=>{let r="Other Services";n.category_id&&o[n.category_id]?r=o[n.category_id]:n.category?.name&&(r=n.category.name),t.has(r)||t.set(r,[]),t.get(r).push({name:n.title||"Unknown Service",href:`/services/${n.slug||"unknown"}`})}),t.forEach(n=>{n.sort((r,e)=>{const i=a.find(c=>c.title===r.name),s=a.find(c=>c.title===e.name);return i?.featured&&!s?.featured?-1:!i?.featured&&s?.featured?1:r.name.localeCompare(e.name)})});const g=["Primary Care","Regenerative Medicine","Pain Management","Diagnostics","Specialized Care","Other Services"];return Array.from(t.entries()).filter(([n,r])=>r.length>0).map(([n,r])=>({title:n,services:r})).sort((n,r)=>{const e=g.indexOf(n.title),i=g.indexOf(r.title);return e!==-1&&i!==-1?e-i:e!==-1?-1:i!==-1?1:n.title.localeCompare(r.title)})}async function C(){try{console.log("üîÑ Loading navigation data from Content API...");const[a,l]=await Promise.all([f.getServices({pageSize:100}),f.getServiceCategories()]),t=a.services||a.data||[],o=l.categories||l.data||[];return!t||!Array.isArray(t)||t.length===0?(console.warn("‚ö†Ô∏è No services returned, navigation will show empty state"),{navigationCategories:[],footerCategories:[]}):(console.log(`‚úÖ Loaded ${t.length} services for navigation`),console.log(`‚úÖ Loaded ${o.length} categories for navigation`),{navigationCategories:v(t,o),footerCategories:y(t,o)})}catch(a){return console.error("‚ùå Failed to load navigation data:",a),{navigationCategories:[],footerCategories:[]}}}async function S(){try{console.log("üîÑ Loading hero services data from Content API...");const a=await f.getServiceCategories(),l=a.categories||a.data||[];if(!l||!Array.isArray(l)||l.length===0)return console.warn("‚ö†Ô∏è No categories returned, hero will show empty state"),{primaryCareServices:[],regenerativeTherapies:[],primaryCategoryName:"Featured Category 1",secondaryCategoryName:"Featured Category 2"};const t=l.find(c=>c.featured1===!0),o=l.find(c=>c.featured2===!0);if(!t||!o)return console.warn("‚ö†Ô∏è No featured categories found, using fallback"),{primaryCareServices:[],regenerativeTherapies:[],primaryCategoryName:"Featured Category 1",secondaryCategoryName:"Featured Category 2"};console.log(`‚úÖ Found featured categories: ${t.name} (featured1), ${o.name} (featured2)`);const[g,n]=await Promise.all([f.getServices({category:t.slug,pageSize:4}),f.getServices({category:o.slug,pageSize:4})]),r=g.services||g.data||[],e=n.services||n.data||[],i=r.map(c=>({title:c.title||"Unknown Service",url:`/services/${c.slug||"unknown"}`})),s=e.map(c=>({title:c.title||"Unknown Service",url:`/services/${c.slug||"unknown"}`}));return console.log(`‚úÖ Hero services loaded: ${i.length} from ${t.name}, ${s.length} from ${o.name}`),{primaryCareServices:i,regenerativeTherapies:s,primaryCategoryName:t.name,secondaryCategoryName:o.name}}catch(a){return console.error("‚ùå Failed to load hero services data:",a),{primaryCareServices:[],regenerativeTherapies:[],primaryCategoryName:"Featured Category 1",secondaryCategoryName:"Featured Category 2"}}}async function A(){try{console.log("üîÑ Loading recent content data from Content API...");const[a,l]=await Promise.all([u.getResearchArticles({pageSize:3}),m.getNewsArticles({pageSize:3})]),t=a.articles||a.data||[],o=l.articles||l.data||[];return console.log(`‚úÖ Loaded recent content: ${t?.length||0} research articles, ${o?.length||0} news articles`),{researchArticles:t||[],newsArticles:o||[]}}catch(a){return console.error("‚ùå Failed to load recent content data:",a),{researchArticles:[],newsArticles:[]}}}async function w(){try{console.log("üîÑ Loading services page data from REST API through Public Gateway...");const[a,l]=await Promise.all([f.getServices({pageSize:100}),f.getServiceCategories()]);if(!a.success)return console.error("‚ùå Services API request failed:",a.message),{serviceCategories:[]};if(!l.success)return console.error("‚ùå Categories API request failed:",l.message),{serviceCategories:[]};const t=a.data||[],o=l.data||[];if(!t||!Array.isArray(t)||t.length===0)return console.warn("‚ö†Ô∏è No services returned from API"),{serviceCategories:[]};console.log(`‚úÖ Loaded ${t.length} services from API`),console.log(`‚úÖ Loaded ${o.length} categories from API`);const g=new Map,n={};o.forEach(e=>{n[e.id]=e.name,g.set(e.name,{id:e.id,title:e.name,description:e.description||"",services:[]})}),g.set("Other Services",{id:null,title:"Other Services",description:"Additional healthcare services and treatments",services:[]}),t.forEach(e=>{let i="Other Services";e.category_id&&n[e.category_id]?i=n[e.category_id]:e.category?.name&&(i=e.category.name);const s=g.get(i);if(s){const c={name:e.title||"Unknown Service",href:`/services/${e.slug||""}`,description:e.description||"",duration:e.duration||"45-90 minutes",available:e.available===!0,featured:e.featured||!1,delivery_modes:Array.isArray(e.delivery_modes)?e.delivery_modes:[]};s.services.push(c)}});const r=Array.from(g.values()).filter(e=>e.services.length>0).map(e=>({...e,services:e.services.sort((i,s)=>i.featured&&!s.featured?-1:!i.featured&&s.featured?1:i.name.localeCompare(s.name))})).sort((e,i)=>{const s=["Primary Care","Regenerative Medicine","Pain Management","Diagnostics","Specialized Care","Other Services"],c=s.indexOf(e.title),d=s.indexOf(i.title);return c!==-1&&d!==-1?c-d:c!==-1?-1:d!==-1?1:e.title.localeCompare(i.title)});return console.log(`‚úÖ Organized services into ${r.length} categories`),{serviceCategories:r}}catch(a){return console.error("‚ùå Failed to load services page data:",a),{serviceCategories:[]}}}export{S as loadHeroServicesData,C as loadNavigationData,A as loadRecentContentData,w as loadServicesPageData,y as transformToFooterCategories,v as transformToNavigationCategories};
